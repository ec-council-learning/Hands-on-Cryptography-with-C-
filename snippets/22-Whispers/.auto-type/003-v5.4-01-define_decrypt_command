file: src/whisper.cpp
line: 55
align: top
---
⇥↓↓↓↓⇥

/// \brief Decrypts a ciphertext \a whisper, encrypted by a friend.
std::string wiz::Whisper::Read(const std::string& whisper) const
{
  Botan::AutoSeeded_RNG rng;

  // initializes the ECDH session using the recipient's private key
  // note: decryption can only happen using the "friend private key".
  Botan::ECIES_Decryptor  dec_pk(*(m_id.m_private_key), *(m_id.m_params), rng);
  Botan::ECIES_Decryptor  dec_full(*(m_id.m_private_key), *(m_id.m_params), rng);

  // expects base64 ciphertext
  Botan::secure_vector<uint8_t> allbytes = Botan::base64_decode(whisper);

  // (1): decrypts the IV and encrypted bytes using private key
  Botan::secure_vector<uint8_t> bytes = dec_pk.decrypt(allbytes);

  // first 16 bytes contain the IV (now decrypted)
  auto iv = Botan::secure_vector<uint8_t>(bytes.begin(), bytes.begin()+16);
  dec_full.set_initialization_vector(Botan::OctetString(iv));

  // rest is the whisper ciphertext (encrypted with pk and iv)
  auto cipher = Botan::secure_vector<uint8_t>(bytes.begin()+16, bytes.end());

  // (2): decrypts the whisper using IV and private key
  Botan::secure_vector<uint8_t> plain = dec_full.decrypt(cipher);
  return std::string(plain.begin(), plain.end());
}