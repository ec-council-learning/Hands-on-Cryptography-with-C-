// src/functions.cpp
#include "functions.h"
#include <vector> // std::vector
#include <botan/auto_rng.h> // AutoSeeded_RNG
#include <botan/block_cipher.h> // BlockCipher
#include <botan/hex.h> // hex_encode

Botan::AutoSeeded_RNG g_rng;

std::string encrypt(std::string input) {
  std::vector<uint8_t> cipher(input.begin(), input.end());
  const auto enc = Botan::BlockCipher::create_or_throw("Serpent");
  const auto key = g_rng.random_vec(32);
  enc->set_key(key);
  enc->encrypt(cipher); // cipher passed by reference
  return Botan::hex_encode(cipher);
}