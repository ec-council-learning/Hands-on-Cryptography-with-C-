file: src/identity.cpp
line: 31
align: top
---
⇥↓↓↓↓⇥

/// \brief Copy constructor. Creates an identity based on \a rht.
SMSpp::Identity::Identity(const Identity& rht)
  : m_params(new Botan::ECIES_System_Params(*rht.m_params))
{
  m_private_key = std::make_unique<PrivateKeyImpl>(
    (rht.m_private_key)->algorithm_identifier(),
    (rht.m_private_key)->private_key_bits()
  );

  m_public_key = std::make_unique<PublicKeyImpl>(
    m_private_key->algorithm_identifier(),
    m_private_key->public_key_bits()
  );
}

/// \brief Class destructor which uses the opportunity for zeroing keys.
SMSpp::Identity::~Identity()
{
  // take-over ownership
  PrivateKeyImpl* priv = m_private_key.release();
  PublicKeyImpl*   pub = m_public_key.release();

  // zeroing key memory space
  std::memset(reinterpret_cast<void*>(&priv), 0, sizeof(priv));
  std::memset(reinterpret_cast<void*>(&pub), 0, sizeof(pub));

  // pointer deletion
  delete priv;
  delete pub;
}